@{
    ViewBag.Title = "Home Page";
}
<script type="text/javascript" src="~/Scripts/knockout-3.5.1.js"></script>
<script type="text/javascript" src="~/Scripts/jquery-3.4.1.js"></script>
<script type="text/javascript" src="~/Scripts/bootstrap.js"></script>
<script type="text/javascript" src="~/Scripts/knockout.simpleGrid.3.0.js"></script>


<body>

    <p class="h2 text-center">DataViewer</p>

    <div class="container">
        <div class="row">
            <div class="col-md-2">Criteria:</div>
            <div class="col-md-8">
                <select class="dropdown-item" data-bind="options: searchCrit,
                value: chosenValue,
                optionsCaption: '   '">
                </select>
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-md-2"> Criteria Value:</div>
            <div class="col-md-7">
                <input data-bind="value: number" />
                <button style="margin-left:20px" class="btn btn-primary" data-bind="click: search">Search</button>
                @*<button class="btn btn-danger" data-bind="click: remov">Remove</button>*@
            </div>
        </div>
    </div>
    

    <p class="Titles h4 text-center" data-bind="visible: showHide">DAProcess</p>
    <div class="scroll">
        <table id="table1" data-bind="visible: showHide">
        </table>
    </div>
    <br />

    <p class="Titles h4 text-center" data-bind="visible: showHideT">DAProcessDoc</p>
    <div class="scroll">
        <table id="table2" data-bind="visible: showHide">
        </table>
    </div>
    <br />
    <p class="Titles h4 text-center" data-bind="visible: showHideT">DAProcessWorkQueue</p>
    <div class="scroll">
        <table id="table3" data-bind="visible: showHide">
        </table>
    </div>
    <br />
    <p class="Titles h4 text-center" data-bind="visible: showHideT">DAProcessAnomaly</p>
    <div class="scroll">
        <table id="table4" data-bind="visible: showHide">
        </table>
    </div>
    <br />
    <p class="Titles h4 text-center" data-bind="visible: showHideT">DAProcessOperation</p>
    <div class="scroll">
        <table id="table5" data-bind="visible: showHide">
        </table>
    </div>
    <br />
    <p class="Titles h4 text-center" data-bind="visible: showHideT">TJBranch</p>
    <div class="scroll">
        <table id="table6" data-bind="visible: showHide">
        </table>
    </div>
    <br />
    <p class="Titles h4 text-center" data-bind="visible: showHideT">Signature</p>
    <div class="scroll">
        <table id="table7" data-bind="visible: showHide">
        </table>
    </div>

</body>


<script>
    function ViewModel() { //knockout JS
        var self = this;
        self.showHide = ko.observable();
        self.showHideT = ko.observable();
        //Observables
        self.searchCrit = ko.observableArray(['PROCESS', 'CONTRACT', 'NIF', 'SEQNBR'])
        self.chosenValue = ko.observable(); //RECEBE O CRITÉRIO DE PESQUISA
        self.number = ko.observable(""); //supostamente ta a gravar o numero inserido

        self.compValue = ko.computed(function () {
            return self.number()
        }, this);

        var cab = false;
        var custom = false; // tabela DAProcessOperation
        var custom1 = false; // tjbranch

        self.remov = function () {
            cab = false;
            custom = false;
            custom1 = false;
            self.showHide(false);

            $("td").remove();
            $("tr").remove();
        }


        self.search = function () {
            if (self.number() && self.chosenValue()) {
                $.getJSON("/api/Query" + "/DAProcess/" + self.chosenValue() + "/" + self.number())
                    .done(function (allData) {
                        self.showHide(true);
                        if (allData.length == 0) { //no caso de nao ter qualquer dado
                            $('<tr>').attr('id', 'trPrincipal').appendTo('#table1');
                            if (cab == false) {
                                x = ["SeqNbr", "ProductCode", "BizProcCode", "BizProcNbr", "Status", "BranchCode", "StatusDate", "StatusTime", "User", "UserLock", "CreationTime", "CreationUser", "CustomerName", "CustomerNbr", "ContractNbr", "Transit", "EntryChannel",
                                    "CentralStatus", "AssociatedDAProcessSeqNbr", "StatusDesc", "Produt", "Process"];
                                for (i = 0; i < x.length; i++) {
                                    $('<th>').attr('id', 'kk').text(x[i]).appendTo('#trPrincipal');
                                    $('<td>').attr('id', 'info').text("---").appendTo('#table1');
                                }
                                cab = true;
                            }
                        } else {
                            $('<tr>').attr('id', 'trPrincipal').appendTo('#table1');
                            if (cab == false) {
                                const keys = Object.keys(allData[0])
                                for (const key of keys) {
                                    $('<th>').attr('id', 'kk').text(key).appendTo('#trPrincipal');
                                }
                                cab = true;
                            }
                            var i = 0;
                            for (i = 0; i < allData.length; i++) {
                                const values = Object.values(allData[i])
                                for (const value of values) {
                                    $('<td>').attr('id', 'info').text(value).appendTo('#table1');
                                }
                                $('<tr>').attr('id', 'info').appendTo('#table1');
                            }
                        }
                    }).fail(function () {
                        alert("404 Not Found");
                    });

                if (self.chosenValue() == "PROCESS") {
                    self.showHideT(true);
                    $.getJSON("/api/Query" + "/DAProcessDoc/" + self.number())
                        .done(function (allData) {
                            if (allData.length == 0) { //no caso de nao ter qualquer dado
                                $('<tr>').attr('id', 'trdoc').appendTo('#table2');
                                if (cab == false) {
                                    x = ["SeqNbr", "DAProcessSeqNbr", "DocTypeCode", "Path", "Version", "DocStatusCode", "Status", "StatusDate", "StatusTime", "Motive", "IndManualAttach", "AttachmentDate", "AttachmentTime", "IsMandatory", "ExternalDocID", "CustomerNbr", "Source", "NbrPages", "Barcode", "Order", "Deleted", "ValidationTypeCode", "DigitalValidationCode", "PhysicalValidationCode", "BatchID", "IsSignedPrimaryHolder", "IsSignedSecondaryHolder",
                                        "ProofDocCode", "CanAttach", "SignatureRequired", "MinPages", "MaxPages", "IsActive"];
                                    for (i = 0; i < x.length; i++) {
                                        $('<th>').attr('id', 'kk').text(x[i]).appendTo('#trdoc');
                                        $('<td>').attr('id', 'info').text("---").appendTo('#table2');
                                    }
                                }
                            } else {
                                $('<tr>').attr('id', 'trdoc').appendTo('#table2');
                                if (cab == false) {
                                    const keys = Object.keys(allData[0])
                                    for (const key of keys) {
                                        $('<th>').attr('id', 'kk').text(key).appendTo('#trdoc');
                                    }
                                }
                                var i = 0;
                                for (i = 0; i < allData.length; i++) {
                                    const values = Object.values(allData[i])
                                    for (const value of values) {
                                        $('<td>').attr('id', 'info').text(value).appendTo('#table2');
                                    }
                                    $('<tr>').attr('id', 'info').appendTo('#table2');
                                }
                            }
                        });

                    $.getJSON("/api/Query" + "/DAProcessWorkQueue/" + self.number())
                        .done(function (allData) {
                            if (allData.length == 0) { //no caso de nao ter qualquer dado
                                $('<tr>').attr('id', 'trWorkQ').appendTo('#table3');
                                if (cab == false) {
                                    x = ["DAProcessSeqNbr", "WorkQueueCode", "AssignDate", "AssignTime", "Delay", "Priority"];
                                    for (i = 0; i < x.length; i++) {
                                        $('<th>').attr('id', 'kk').text(x[i]).appendTo('#trWorkQ');
                                        $('<td>').attr('id', 'info').text("---").appendTo('#table3');
                                    }
                                }
                            } else {
                                $('<tr>').attr('id', 'trWorkQ').appendTo('#table3');
                                if (cab == false) {
                                    const keys = Object.keys(allData[0])
                                    for (const key of keys) {
                                        $('<th>').attr('id', 'kk').text(key).appendTo('#trWorkQ');
                                    }
                                }
                                var i = 0;
                                for (i = 0; i < allData.length; i++) {
                                    const values = Object.values(allData[i])
                                    for (const value of values) {
                                        $('<td>').attr('id', 'info').text(value).appendTo('#table3');
                                    }
                                    $('<tr>').attr('id', 'info').appendTo('#table3');
                                }
                            }
                        })

                    $.getJSON("/api/Query" + "/DAProcessAnomaly/" + self.number())
                        .done(function (allData) {
                            if (allData.length == 0) { //no caso de nao ter qualquer dado
                                $('<tr>').attr('id', 'trPA').appendTo('#table4');
                                if (cab == false) {
                                    x = ["Code", "Description", "AnomalyTypeCode", "HolderNbr", "AnomalyThemeCode", "AnomalyDateTime", "CreationUser", "Resolved", "ResolvedDate", "ResolvedUser"];
                                    for (i = 0; i < x.length; i++) {
                                        $('<th>').attr('id', 'kk').text(x[i]).appendTo('#trPA');
                                        $('<td>').attr('id', 'info').text("---").appendTo('#table4');
                                    }
                                }
                            } else {
                                $('<tr>').attr('id', 'trPA').appendTo('#table4');
                                const keys = Object.keys(allData[0])
                                for (const key of keys) {
                                    $('<th>').attr('id', 'kk').text(key).appendTo('#trPA');
                                }
                                var i = 0;
                                for (i = 0; i < allData.length; i++) {
                                    const values = Object.values(allData[i])
                                    for (const value of values) {
                                        $('<td>').attr('id', 'info').text(value).appendTo('#table4');
                                    }
                                    $('<tr>').attr('id', 'info').appendTo('#table4');
                                }
                            }
                        })

                    $.getJSON("/api/Query" + "/DAProcessOperation/" + self.number())
                        .done(function (allData) {
                            if (allData.length == 0) { //no caso de nao ter qualquer dado
                                $('<tr>').attr('id', 'dapOP').appendTo('#table5');
                                if (custom == false) {
                                    x = ["OpDate", "OpTime", "OpUser", "OpStatusCode", "OpStatusDesc"];
                                    for (i = 0; i < x.length; i++) {
                                        $('<th>').attr('id', 'kk').text(x[i]).appendTo('#dapOP');
                                        $('<td>').attr('id', 'info').text("---").appendTo('#table5');
                                    }
                                    custom = true;
                                }
                            } else {
                                $('<tr>').attr('id', 'dapOP').appendTo('#table5');
                                if (custom == false) {
                                    const keys = Object.keys(allData[0])
                                    for (const key of keys) {
                                        $('<th>').attr('id', 'kk').text(key).appendTo('#dapOP');
                                    }
                                    custom = true;
                                }
                                var i = 0;
                                for (i = 0; i < allData.length; i++) {
                                    const values = Object.values(allData[i])
                                    for (const value of values) {
                                        $('<td>').attr('id', 'info').text(value).appendTo('#table5');
                                    }
                                    $('<tr>').attr('id', 'info').appendTo('#table5');
                                }
                            }
                        })

                    $.getJSON("/api/Query" + "/TJBranch/" + self.number())
                        .done(function (allData) {
                            if (allData.length == 0) { //no caso de nao ter qualquer dado
                                $('<tr>').attr('id', 'tjBRA').appendTo('#table6');
                                if (custom1 == false) {
                                    x = ["UserName", "ProcDate", "ProcTime", "Channel", "Branch", "TxnCode", "Status", "SysError", "UserMsg", "TxnDetail"];
                                    for (i = 0; i < x.length; i++) {
                                        $('<th>').attr('id', 'kk').text(x[i]).appendTo('#tjBRA');
                                        $('<td>').attr('id', 'info').text("---").appendTo('#table6');
                                    }
                                    custom1 = true;
                                }
                            } else {
                                $('<tr>').attr('id', 'tjBRA').appendTo('#table6');
                                if (custom1 == false) {
                                    const keys = Object.keys(allData[0])
                                    for (const key of keys) {
                                        $('<th>').attr('id', 'kk').text(key).appendTo('#tjBRA');
                                    }
                                    custom1 = true;
                                }
                                var i = 0;
                                for (i = 0; i < allData.length; i++) {
                                    const values = Object.values(allData[i])
                                    for (const value of values) {
                                        $('<td>').attr('id', 'info').text(value).appendTo('#table6');
                                    }
                                    $('<tr>').attr('id', 'info').appendTo('#table6');
                                }
                            }
                        })

                    $.getJSON("/api/Query" + "/Signature/" + self.number())
                        .done(function (allData) {
                            if (allData.length == 0) { //no caso de nao ter qualquer dado
                                $('<tr>').attr('id', 'Sign').appendTo('#table7');
                                if (cab == false) {
                                    x = ["SeqNbr", "DAProcessSeqNbr", "SignatureKey", "StatusDate", "StatusTime", "DAProcessDocSeqNbr", "SignatureTypeCode"];
                                    for (i = 0; i < x.length; i++) {
                                        $('<th>').attr('id', 'kk').text(x[i]).appendTo('#Sign');
                                        $('<td>').attr('id', 'info').text("---").appendTo('#table7');
                                    }
                                }
                            } else {
                                $('<tr>').attr('id', 'Sign').appendTo('#table7');
                                if (cab == false) {
                                    const keys = Object.keys(allData[0])
                                    for (const key of keys) {
                                        $('<th>').attr('id', 'kk').text(key).appendTo('#Sign');
                                    }
                                }
                                var i = 0;
                                for (i = 0; i < allData.length; i++) {
                                    const values = Object.values(allData[i])
                                    for (const value of values) {
                                        $('<td>').attr('id', 'info').text(value).appendTo('#table7');
                                    }
                                    $('<tr>').attr('id', 'info').appendTo('#table7');
                                }
                            }
                        })
                } else {
                    self.showHideT(false);
                }
            } else {
                alert("404 Not Found");
                self.remov();
            }
            self.remov();
        }
    };

    ko.applyBindings(new ViewModel());
</script>

<style>
    .scroll {
        margin: 4px, 4px;
        padding: 4px;
        overflow: auto;
        white-space: nowrap;
        max-height: 400px;
        overflow-y: auto;
    }

    #trPrincipal {
        width: 20px;
    }

    #kk {
        font-size: 12px;
    }


    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    td, th {
        border: 1px solid #dddddd;
        border: thin black solid;
        text-align: center;
        padding: 5px;
    }

    th {
        font-size: 13px;
        overflow-wrap: break-word;
        border: thin black solid;
    }

    tr:nth-child(even) {
        background-color: #dddddd;
    }
</style>
